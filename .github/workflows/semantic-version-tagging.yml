name: Semantic Version Tagging
on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
        default: "main"

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine version increment based on branch
        id: determine_version_part
        run: |
          VERSION_PART="patch"
          if [[ "${{ inputs.branch }}" == "main" ]]; then
            VERSION_PART="minor"
          elif [[ "${{ inputs.branch }}" =~ ^hotfix/ ]]; then
            VERSION_PART="patch"
          fi
          echo "VERSION_PART=$VERSION_PART" >> $GITHUB_ENV

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git tag | sort -V | tail -n 1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v0.0.0"
          fi
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Determine next version
        id: increment_version
        run: |
          TAG=${LATEST_TAG#v}
          MAJOR=$(echo $TAG | cut -d. -f1)
          MINOR=$(echo $TAG | cut -d. -f2)
          PATCH=$(echo $TAG | cut -d. -f3)
          if [ "$VERSION_PART" = "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [ "$VERSION_PART" = "patch" ]; then
            PATCH=$((PATCH + 1))
          fi
          NEXT_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV
          echo "next_tag=$NEXT_TAG" >> $GITHUB_ENV

      - name: Create and push new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag $NEXT_TAG
          git push origin $NEXT_TAG